stations_list = [
        'бульвар рокоссовского', 'черкизовская', 'преображенская площадь',
        'сокольники', 'красносельская', 'комсомольская', 'красные ворота',
        'чистые пруды', 'лубянка', 'охотный ряд', 'кропоткинская',
        'парк культуры', 'фрунзенская', 'спортивная', 'воробьевы горы',
        'университет', 'проспект вернадского', 'юго западная',
        'красногвардейская', 'домодедовская', 'орехово', 'царицыно',
        'кантемировская', 'коломенская', 'автозаводская', 'павелецкая',
        'новокузнецкая', 'театральная', 'тверская', 'маяковская',
        'белорусская', 'динамо', 'аэропорт', 'сокол', 'войковская',
        'водный стадион', 'речной вокзал', 'каширская', 'каховская',
        'варшавская', 'киевская', 'смоленская', 'арбатская',
        'площадь революции', 'курская', 'бауманская', 'электрозаводская',
        'семеновская', 'партизанская', 'измайловская', 'первомайская',
        'щелковская', 'александровский сад', 'студенческая', 'кутузовская',
        'фили', 'багратионовская', 'филевский парк', 'пионерская',
        'кунцевская', 'молодежная', 'крылатское', 'новослободская',
        'проспект мира', 'таганская', 'добрынинская', 'октябрьская',
        'краснопресненская', 'новогиреево', 'перово', 'шоссе энтузиастов',
        'авиамоторная', 'площадь ильича', 'марксистская', 'третьяковская',
        'медведково', 'бабушкинская', 'свиблово', 'ботанический сад',
        'вднх', 'алексеевская', 'рижская', 'сухаревская', 'тургеневская',
        'китай город', 'шаболовская', 'ленинский проспект',
        'академическая', 'профсоюзная', 'новые черемушки', 'калужская',
        'беляево', 'коньково', 'теплый стан', 'ясенево', 'новоясеневская',
        'выхино', 'рязанский проспект', 'кузьминки', 'текстильщики',
        'волгоградский проспект', 'пролетарская', 'кузнецкий мост',
        'пушкинская', 'баррикадная', 'улица 1905 года', 'беговая',
        'полежаевская', 'октябрьское поле', 'щукинская', 'тушинская',
        'сходненская', 'планерная', 'алтуфьево', 'бибирево', 'отрадное',
        'владыкино', 'петровско разумовская', 'тимирязевская',
        'дмитровская', 'савеловская', 'менделеевская', 'цветной бульвар',
        'чеховская', 'боровицкая', 'полянка', 'серпуховская', 'тульская',
        'нагатинская', 'нагорная', 'нахимовский проспект',
        'севастопольская', 'чертановская', 'южная', 'пражская',
        'чкаловская', 'римская', 'крестьянская застава', 'кожуховская',
        'печатники', 'волжская', 'люблино', 'братиславская', 'марьино',
        'библиотека имени ленина', 'дубровка', 'улица академика янгеля',
        'аннино', 'технопарк', 'бульвар дмитрия донского', 'парк победы',
        'улица старокачаловская', 'улица скобелевская',
        'бульвар адмирала ушакова', 'улица горчакова', 'бунинская аллея',
        'трубная', 'строгино', 'сретенский бульвар', 'славянский бульвар',
        'мякинино', 'волоколамская', 'митино', 'достоевская',
        'марьина роща', 'борисово', 'шипиловская', 'зябликово',
        'новокосино', 'алма атинская', 'пятницкое шоссе', 'жулебино',
        'лермонтовский проспект', 'котельники', 'битцевский парк',
        'лесопарковая', 'деловой центр', 'спартак', 'тропарево',
        'румянцево', 'саларьево', 'шелепиха', 'панфиловская', 'стрешнево',
        'балтийская', 'коптево', 'лихоборы', 'окружная', 'локомотив',
        'измайлово', 'андроновка', 'угрешская', 'зил', 'хорошево',
        'ростокино', 'белокаменная', 'новохохловская', 'верхние котлы',
        'крымская', 'нижегородская', 'лужники', 'москва сити', 'зорге',
        'площадь гагарина', 'бутырская', 'фонвизинская', 'минская',
        'ломоносовский проспект', 'раменки', 'петровский парк', 'ховрино',
        'хорошевская', 'цска', 'селигерская', 'верхние лихоборы',
        'мичуринский проспект', 'озерная', 'говорово', 'солнцево',
        'боровское шоссе', 'новопеределкино', 'рассказовка', 'беломорская',
        'филатов луг', 'прокшино', 'ольховая', 'коммунарка', 'косино',
        'улица дмитриевского', 'лухмановская', 'некрасовка',
        'юго восточная', 'окская', 'стахановская', 'лефортово',
        'тпу рязанская', 'народное ополчение', 'мневники', 'зюзино',
        'воронцовская', 'новаторская', 'аминьевская', 'давыдково',
        'терехово', 'нагатинский затон', 'кленовый бульвар', 'пыхтино',
        'аэропорт внуково', 'яхромская', 'лианозово', 'физтех'
]

import datetime
from natasha import DatesExtractor
from natasha.markup import show_json

def get_date(text: str) -> list:
    extractor = DatesExtractor()
    matches = extractor(text)
    facts = [_.fact.as_json for _ in matches]
    return facts

"""Функция расстояния Левенштейна"""
def distance(a, b):
    n, m = len(a), len(b)
    if n > m:
        a, b = b, a
        n, m = m, n
    current_row = range(n + 1)
    for i in range(1, m + 1):
        previous_row, current_row = current_row, [i] + [0] * n
        for j in range(1, n + 1):
            add, delete, change = previous_row[j] + 1, current_row[j - 1] + 1, previous_row[j - 1]
            if a[j - 1] != b[i - 1]:
                change += 1
            current_row[j] = min(add, delete, change)
    return current_row[n]

def min_slice_check(text: str, station: str, slice_value: int) -> int:
        mn = distance(station, text[:slice_value])
        for i in range(len(text) - slice_value + 1):
            dst = distance(station, text[i:i + slice_value])
            if dst < mn:
                mn = dst
        return mn

def get_station(text: str) -> str:
    

    mn = min_slice_check(text, stations_list[0], len(stations_list[0]))
    current_station = stations_list[0]
    for station in stations_list:
        dst = min_slice_check(text, station, len(station))
        if dst < mn:
            current_station = station
            mn = dst
    return current_station if mn < 3 else ""

def data_generation(text: str) -> dict:
    date = get_date(text)
    day = [i['day'] if 'day' in i.keys() and len(i) \
    else datetime.datetime.now().day for i in date]
    month = [i['month'] if 'month' in i.keys() and len(i) \
    else datetime.datetime.now().month for i in date]
    year = [i['year'] if 'year' in i.keys() and len(i) \
    else datetime.datetime.now().year for i in date]
    return {
        'year': year[0],
        'day': day[0],
        'month': month[0], 
        'station': get_station(text),
    }

#print(data_generation(input()))
